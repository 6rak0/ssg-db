/* src/components/Reporte.svelte generated by Svelte v3.23.2 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	check_outros,
	create_bidirectional_transition,
	create_component,
	destroy_component,
	detach,
	element,
	empty,
	group_outros,
	init,
	insert,
	listen,
	mount_component,
	run_all,
	safe_not_equal,
	set_data,
	space,
	text,
	transition_in,
	transition_out
} from "/web_modules/svelte/internal.js";

import { slide } from "/web_modules/svelte/transition.js";
import { createEventDispatcher } from "/web_modules/svelte.js";
import axios from "/web_modules/axios/index.js";
import Modal from "./Modal.js";
import Form from "./Form.js";

function create_if_block(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: {
				title: "Editar reporte",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	modal.$on("close", /*close_handler*/ ctx[6]);

	return {
		c() {
			create_component(modal.$$.fragment);
		},
		m(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const modal_changes = {};

			if (dirty & /*$$scope, reporte*/ 129) {
				modal_changes.$$scope = { dirty, ctx };
			}

			modal.$set(modal_changes);
		},
		i(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(modal, detaching);
		}
	};
}

// (110:2) <Modal title="Editar reporte" on:close={() => (showModal = false)}>
function create_default_slot(ctx) {
	let form;
	let current;
	form = new Form({ props: { reporte: /*reporte*/ ctx[0] } });
	form.$on("submit", /*handleUpdate*/ ctx[3]);

	return {
		c() {
			create_component(form.$$.fragment);
		},
		m(target, anchor) {
			mount_component(form, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const form_changes = {};
			if (dirty & /*reporte*/ 1) form_changes.reporte = /*reporte*/ ctx[0];
			form.$set(form_changes);
		},
		i(local) {
			if (current) return;
			transition_in(form.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(form.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(form, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let header;
	let p;
	let t0;
	let t1_value = /*reporte*/ ctx[0].id + "";
	let t1;
	let t2;
	let t3_value = /*reporte*/ ctx[0].fraccion + "";
	let t3;
	let t4;
	let t5_value = (/*reporte*/ ctx[0].descripcion || "") + "";
	let t5;
	let t6;
	let a0;
	let t8;
	let div1;
	let div0;
	let table;
	let tr0;
	let td0;
	let t10;
	let td1;
	let t11_value = (/*reporte*/ ctx[0].nombre || "n/a") + "";
	let t11;
	let t12;
	let tr1;
	let td2;
	let t14;
	let td3;
	let t15_value = (/*reporte*/ ctx[0].lig || /*reporte*/ ctx[0].ligamento || "n/a") + "";
	let t15;
	let t16;
	let tr2;
	let td4;
	let t18;
	let td5;
	let t19_value = (/*reporte*/ ctx[0].aca || /*reporte*/ ctx[0].acabado || "n/a") + "";
	let t19;
	let t20;
	let tr3;
	let td6;
	let t22;
	let td7;
	let t23_value = (/*reporte*/ ctx[0].composicion || "n/a") + "";
	let t23;
	let t24;
	let tr4;
	let td8;
	let t26;
	let td9;
	let t27_value = (/*reporte*/ ctx[0].filfib || "n/a") + "";
	let t27;
	let t28;
	let tr5;
	let td10;
	let t30;
	let td11;
	let t31_value = (/*reporte*/ ctx[0].tejido || "n/a") + "";
	let t31;
	let t32;
	let tr6;
	let td12;
	let t34;
	let td13;
	let t35_value = (/*reporte*/ ctx[0].gramaje || "n/a") + "";
	let t35;
	let t36;
	let tr7;
	let td14;
	let t38;
	let td15;
	let t39_value = (/*reporte*/ ctx[0].ancho || "n/a") + "";
	let t39;
	let t40;
	let tr8;
	let td16;
	let t42;
	let td17;
	let t43_value = (/*reporte*/ ctx[0].otros || "n/a") + "";
	let t43;
	let t44;
	let tr9;
	let td18;
	let t46;
	let td19;
	let t47_value = (/*reporte*/ ctx[0].conclusion || "n/a") + "";
	let t47;
	let t48;
	let tr10;
	let td20;
	let t50;
	let td21;
	let t51_value = (new Date(/*reporte*/ ctx[0].creado).toLocaleString() || "n/a") + "";
	let t51;
	let t52;
	let tr11;
	let td22;
	let t54;
	let td23;
	let t55_value = (new Date(/*reporte*/ ctx[0].editado).toLocaleString() || "n/a") + "";
	let t55;
	let table_id_value;
	let t56;
	let footer;
	let a1;
	let t58;
	let a2;
	let t60;
	let a3;
	let div2_transition;
	let t62;
	let if_block_anchor;
	let current;
	let mounted;
	let dispose;
	let if_block = /*showModal*/ ctx[1] && create_if_block(ctx);

	return {
		c() {
			div2 = element("div");
			header = element("header");
			p = element("p");
			t0 = text("Id: ");
			t1 = text(t1_value);
			t2 = text(" - Fracci贸n: ");
			t3 = text(t3_value);
			t4 = text(" - ");
			t5 = text(t5_value);
			t6 = space();
			a0 = element("a");
			a0.innerHTML = `<span class="icon">&gt;</span>`;
			t8 = space();
			div1 = element("div");
			div0 = element("div");
			table = element("table");
			tr0 = element("tr");
			td0 = element("td");
			td0.textContent = "Nombre:";
			t10 = space();
			td1 = element("td");
			t11 = text(t11_value);
			t12 = space();
			tr1 = element("tr");
			td2 = element("td");
			td2.textContent = "Ligamento:";
			t14 = space();
			td3 = element("td");
			t15 = text(t15_value);
			t16 = space();
			tr2 = element("tr");
			td4 = element("td");
			td4.textContent = "Acabado:";
			t18 = space();
			td5 = element("td");
			t19 = text(t19_value);
			t20 = space();
			tr3 = element("tr");
			td6 = element("td");
			td6.textContent = "Composici贸n:";
			t22 = space();
			td7 = element("td");
			t23 = text(t23_value);
			t24 = space();
			tr4 = element("tr");
			td8 = element("td");
			td8.textContent = "Filamento o Fibra:";
			t26 = space();
			td9 = element("td");
			t27 = text(t27_value);
			t28 = space();
			tr5 = element("tr");
			td10 = element("td");
			td10.textContent = "Tejido:";
			t30 = space();
			td11 = element("td");
			t31 = text(t31_value);
			t32 = space();
			tr6 = element("tr");
			td12 = element("td");
			td12.textContent = "Gramaje en g/m2:";
			t34 = space();
			td13 = element("td");
			t35 = text(t35_value);
			t36 = space();
			tr7 = element("tr");
			td14 = element("td");
			td14.textContent = "Ancho en cm:";
			t38 = space();
			td15 = element("td");
			t39 = text(t39_value);
			t40 = space();
			tr8 = element("tr");
			td16 = element("td");
			td16.textContent = "Otros datos:";
			t42 = space();
			td17 = element("td");
			t43 = text(t43_value);
			t44 = space();
			tr9 = element("tr");
			td18 = element("td");
			td18.textContent = "Conclusi贸n:";
			t46 = space();
			td19 = element("td");
			t47 = text(t47_value);
			t48 = space();
			tr10 = element("tr");
			td20 = element("td");
			td20.textContent = "Fecha de reporte:";
			t50 = space();
			td21 = element("td");
			t51 = text(t51_value);
			t52 = space();
			tr11 = element("tr");
			td22 = element("td");
			td22.textContent = "Fecha de edici贸n:";
			t54 = space();
			td23 = element("td");
			t55 = text(t55_value);
			t56 = space();
			footer = element("footer");
			a1 = element("a");
			a1.textContent = "Compartir";
			t58 = space();
			a2 = element("a");
			a2.textContent = "Editar";
			t60 = space();
			a3 = element("a");
			a3.textContent = "Borrar";
			t62 = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			attr(p, "class", "card-header-title");
			attr(a0, "role", "button");
			attr(a0, "class", "card-header-icon");
			attr(a0, "aria-label", "more options");
			attr(header, "class", "card-header");
			attr(table, "id", table_id_value = /*reporte*/ ctx[0].id);
			attr(div0, "class", "content");
			attr(a1, "class", "card-footer-item");
			attr(a2, "class", "card-footer-item");
			attr(a3, "class", "card-footer-item");
			attr(footer, "class", "card-footer");
			footer.hidden = true;
			attr(div1, "class", "card-content");
			div1.hidden = true;
			attr(div2, "class", "card mb-3");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, header);
			append(header, p);
			append(p, t0);
			append(p, t1);
			append(p, t2);
			append(p, t3);
			append(p, t4);
			append(p, t5);
			append(header, t6);
			append(header, a0);
			append(div2, t8);
			append(div2, div1);
			append(div1, div0);
			append(div0, table);
			append(table, tr0);
			append(tr0, td0);
			append(tr0, t10);
			append(tr0, td1);
			append(td1, t11);
			append(table, t12);
			append(table, tr1);
			append(tr1, td2);
			append(tr1, t14);
			append(tr1, td3);
			append(td3, t15);
			append(table, t16);
			append(table, tr2);
			append(tr2, td4);
			append(tr2, t18);
			append(tr2, td5);
			append(td5, t19);
			append(table, t20);
			append(table, tr3);
			append(tr3, td6);
			append(tr3, t22);
			append(tr3, td7);
			append(td7, t23);
			append(table, t24);
			append(table, tr4);
			append(tr4, td8);
			append(tr4, t26);
			append(tr4, td9);
			append(td9, t27);
			append(table, t28);
			append(table, tr5);
			append(tr5, td10);
			append(tr5, t30);
			append(tr5, td11);
			append(td11, t31);
			append(table, t32);
			append(table, tr6);
			append(tr6, td12);
			append(tr6, t34);
			append(tr6, td13);
			append(td13, t35);
			append(table, t36);
			append(table, tr7);
			append(tr7, td14);
			append(tr7, t38);
			append(tr7, td15);
			append(td15, t39);
			append(table, t40);
			append(table, tr8);
			append(tr8, td16);
			append(tr8, t42);
			append(tr8, td17);
			append(td17, t43);
			append(table, t44);
			append(table, tr9);
			append(tr9, td18);
			append(tr9, t46);
			append(tr9, td19);
			append(td19, t47);
			append(table, t48);
			append(table, tr10);
			append(tr10, td20);
			append(tr10, t50);
			append(tr10, td21);
			append(td21, t51);
			append(table, t52);
			append(table, tr11);
			append(tr11, td22);
			append(tr11, t54);
			append(tr11, td23);
			append(td23, t55);
			append(div1, t56);
			append(div1, footer);
			append(footer, a1);
			append(footer, t58);
			append(footer, a2);
			append(footer, t60);
			append(footer, a3);
			insert(target, t62, anchor);
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;

			if (!mounted) {
				dispose = [
					listen(a0, "click", click_handler),
					listen(a2, "click", /*click_handler_1*/ ctx[4]),
					listen(a3, "click", /*click_handler_2*/ ctx[5])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if ((!current || dirty & /*reporte*/ 1) && t1_value !== (t1_value = /*reporte*/ ctx[0].id + "")) set_data(t1, t1_value);
			if ((!current || dirty & /*reporte*/ 1) && t3_value !== (t3_value = /*reporte*/ ctx[0].fraccion + "")) set_data(t3, t3_value);
			if ((!current || dirty & /*reporte*/ 1) && t5_value !== (t5_value = (/*reporte*/ ctx[0].descripcion || "") + "")) set_data(t5, t5_value);
			if ((!current || dirty & /*reporte*/ 1) && t11_value !== (t11_value = (/*reporte*/ ctx[0].nombre || "n/a") + "")) set_data(t11, t11_value);
			if ((!current || dirty & /*reporte*/ 1) && t15_value !== (t15_value = (/*reporte*/ ctx[0].lig || /*reporte*/ ctx[0].ligamento || "n/a") + "")) set_data(t15, t15_value);
			if ((!current || dirty & /*reporte*/ 1) && t19_value !== (t19_value = (/*reporte*/ ctx[0].aca || /*reporte*/ ctx[0].acabado || "n/a") + "")) set_data(t19, t19_value);
			if ((!current || dirty & /*reporte*/ 1) && t23_value !== (t23_value = (/*reporte*/ ctx[0].composicion || "n/a") + "")) set_data(t23, t23_value);
			if ((!current || dirty & /*reporte*/ 1) && t27_value !== (t27_value = (/*reporte*/ ctx[0].filfib || "n/a") + "")) set_data(t27, t27_value);
			if ((!current || dirty & /*reporte*/ 1) && t31_value !== (t31_value = (/*reporte*/ ctx[0].tejido || "n/a") + "")) set_data(t31, t31_value);
			if ((!current || dirty & /*reporte*/ 1) && t35_value !== (t35_value = (/*reporte*/ ctx[0].gramaje || "n/a") + "")) set_data(t35, t35_value);
			if ((!current || dirty & /*reporte*/ 1) && t39_value !== (t39_value = (/*reporte*/ ctx[0].ancho || "n/a") + "")) set_data(t39, t39_value);
			if ((!current || dirty & /*reporte*/ 1) && t43_value !== (t43_value = (/*reporte*/ ctx[0].otros || "n/a") + "")) set_data(t43, t43_value);
			if ((!current || dirty & /*reporte*/ 1) && t47_value !== (t47_value = (/*reporte*/ ctx[0].conclusion || "n/a") + "")) set_data(t47, t47_value);
			if ((!current || dirty & /*reporte*/ 1) && t51_value !== (t51_value = (new Date(/*reporte*/ ctx[0].creado).toLocaleString() || "n/a") + "")) set_data(t51, t51_value);
			if ((!current || dirty & /*reporte*/ 1) && t55_value !== (t55_value = (new Date(/*reporte*/ ctx[0].editado).toLocaleString() || "n/a") + "")) set_data(t55, t55_value);

			if (!current || dirty & /*reporte*/ 1 && table_id_value !== (table_id_value = /*reporte*/ ctx[0].id)) {
				attr(table, "id", table_id_value);
			}

			if (/*showModal*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*showModal*/ 2) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, slide, {}, true);
				div2_transition.run(1);
			});

			transition_in(if_block);
			current = true;
		},
		o(local) {
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, slide, {}, false);
			div2_transition.run(0);
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div2);
			if (detaching && div2_transition) div2_transition.end();
			if (detaching) detach(t62);
			if (if_block) if_block.d(detaching);
			if (detaching) detach(if_block_anchor);
			mounted = false;
			run_all(dispose);
		}
	};
}

const click_handler = e => {
	e.target.parentElement.parentElement.nextElementSibling.hidden = !e.target.parentElement.parentElement.nextElementSibling.hidden;
};

function instance($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();
	let { reporte } = $$props;
	let showModal = false;

	async function handleUpdate(e) {
		$$invalidate(0, reporte = e.detail);
		$$invalidate(0, reporte.editado = new Date().getTime(), reporte);
		const response = await axios.put("/api/reportes/" + reporte._id, reporte);
		$$invalidate(1, showModal = false);
	}

	const click_handler_1 = () => $$invalidate(1, showModal = true);
	const click_handler_2 = () => dispatch("delete", reporte._id);
	const close_handler = () => $$invalidate(1, showModal = false);

	$$self.$set = $$props => {
		if ("reporte" in $$props) $$invalidate(0, reporte = $$props.reporte);
	};

	return [
		reporte,
		showModal,
		dispatch,
		handleUpdate,
		click_handler_1,
		click_handler_2,
		close_handler
	];
}

class Reporte extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { reporte: 0 });
	}
}

export default Reporte;